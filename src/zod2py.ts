import { z } from "zod"
import fs from "fs"
import ZodTranslator from "./zod-handlers.js"

export class ZodToPython {
  private filePath: string

  constructor(filePath: string) {
    this.filePath = filePath
  }

  convert(schema: z.ZodTypeAny, className: string) {
    const code = this.zodSchemaToPythonDataclass(schema, className)
    if (code) {
      this.writeToFile(code)
    }
  }

  zodSchemaToPythonDataclass(schema: z.ZodTypeAny, className: string): string | undefined {
    const translator = new ZodTranslator(schema)
    const result = translator.translate({
      zodType: schema,
      path: "",
      name: className,
    })
    if (!result.success) {
      return
    }

    const imports = result.imports.map(ZodTranslator.getImport)
    const dataclasses = result.dataStructure
    const code = result.code

    return (
      `####################\n# Generated by ZodToPython\n# DO NOT MODIFY\n####################\n\n\n` +
      imports.join("\n") +
      dataclasses
        .map((dc) => {
          return `\n\n@dataclass\nclass ${dc.name}:\n    ${dc.fields.join("\n    ")}`
        })
        .join("\n") +
      code
    )
  }

  writeToFile(code: string) {
    fs.mkdirSync(this.filePath.split("/").slice(0, -1).join("/"), { recursive: true })
    fs.writeFileSync(this.filePath, code)
  }
}
